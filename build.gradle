plugins {
    // Apply Spring Boot Framework
    id 'org.springframework.boot' version '2.1.6.RELEASE'

    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the war plugin to generate *.war file
    id 'war'

    // Apply IDE plugins to add IDE support
    id 'idea'

    // Apply Build Scan to improve build analysis
    id 'com.gradle.build-scan' version '2.3'

    // Apply Version Plugin to improve out-of-date checks
    id "com.github.ben-manes.versions" version "0.21.0"
}

apply plugin: 'io.spring.dependency-management'

group = 'com.valtechmobility'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '12'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter - Runtime
    implementation 'org.springframework.boot:spring-boot-starter-actuator'/* Actuator */,
                   'org.springframework.boot:spring-boot-starter-data-ldap'/* LDAP */,
                   'org.springframework.boot:spring-boot-starter-data-mongodb'/* MongoDB */,
                   'org.springframework.boot:spring-boot-starter-security'/* Security */,
                   'org.springframework.boot:spring-boot-starter-web'/* Webserver */
    // Spring Boot Starter - Embedded Server
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    // Spring Boot Starter - Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // Spring Boot (Security Test)
    testImplementation 'org.springframework.security:spring-security-test'
    // Spring Boot (Development Tools in DEV Environment)
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    // Swagger UI
    compile "io.springfox:springfox-swagger2:2.9.2",
            "io.springfox:springfox-swagger-ui:2.9.2"

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    // Logging
    runtime 'org.apache.logging.log4j:log4j-api:2.11.2',
            'org.apache.logging.log4j:log4j-core:2.11.2'

    // JUnit5
    testCompile "org.junit.jupiter:junit-jupiter-api:5.4.2"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.4.2"

    // AssertJ
    testCompile "org.assertj:assertj-core:3.12.2"
}

// Run Spring Boot Tasks
springBoot {
    buildInfo {
        properties {
            name = 'Meeting Point - Backend'
        }
    }
}

// Apply Build Scan settings
apply from: './gradle/build-scan.gradle'

// Apply Gradle Wrapper settings
apply from: './gradle/wrapper.gradle'

// Apply JVM settings
apply from: './gradle/jvm.gradle'

test {
    // Use JUnit test framework
    useJUnitPlatform()
}
